--SELECT DOCUMENTO.DOCUMENTNUMBER,DOCUMENTO.DOCUMENTTYPE,DATAPOLICY.EFFECTIVEDATE
--FROM UNDERWRITING.UNDERWRITINGCASE UC
--    INNER JOIN UNDERWRITING.UNDERWRITINGCASERISK UR ON 
--       UC.UNDERWRITINGCASEID = UR.UNDERWRITINGCASEID,
--        (XMLTABLE('RiskInformation/Roles/Role/Client/ClientDocuments/ClientDocument' PASSING UR.RISKINFORMATIONDATA COLUMNS 
--            DOCUMENTTYPE    VARCHAR2(80) PATH '/ClientDocument/@DocumentType',
--    		DOCUMENTNUMBER  VARCHAR2(80) PATH '/ClientDocument/@DocumentNUmber') DOCUMENTO),
--        (XMLTABLE('RiskInformation' PASSING UR.RISKINFORMATIONDATA COLUMNS 
--            EFFECTIVEDATE   VARCHAR2(80) PATH '/RiskInformation/@EffectiveDate',
--            LINEOFBUSINESS  VARCHAR2(80) PATH '/RiskInformation/@LineOfBusiness',
--            PRODUCTCODE     VARCHAR2(80) PATH '/RiskInformation/@ProductCode') DATAPOLICY)
--WHERE REPLACE (REPLACE (REPLACE (DOCUMENTO.DOCUMENTNUMBER,'-',''),' ',''),'.','')= REPLACE (REPLACE (REPLACE ('25664715','-',''),' ',''),'.','')
--   AND DATAPOLICY.LINEOFBUSINESS  = 6
--   AND DATAPOLICY.PRODUCTCODE = 6800
--   AND DATAPOLICY.LINEOFBUSINESS  =UC.LINEOFBUSINESS
--   AND DATAPOLICY.PRODUCTCODE = UC.PRODUCT

-- tablas implicadas: 
-- INSUDB.CLAIM			> SCLIENT FK (CHAR 14)	> NCLAIM(PK)
-- INSUDB.CLIENT		> SCLIENT PK (CHAR 14)	> DDEATHDAT (DATE)
-- INSUDB.CLIDOCUMENTS	> SCLIENT PK (CHAR 14)	> NTYPCLIENTDOC PK (NUMBER 5) SCLINUMDOCU PK (CHAR 15)
-- INSUDB.ADDRESS		> SCLIENT FK (CHAR 14)	> SE_MAIL (char 60), DNULLDATE (DATE), NRECOWNER PK (Number 5), SKEYADDRESS PK (Char 50), DEFFECDATE PK (Date) 

-- INSUDB.POLICY:
-- Primary Key Member Foreign Key Member SCERTYPE TipoDeRegistro Tipo de registro. Valores posibles según la tabla TABLE5632. TABLE5632 content  Char(1)   
-- Primary Key Member Foreign Key Member NBRANCH RamoComercial Código del ramo comercial. Valores posibles según la tabla TABLE10. TABLE10 content  Number(5)   
-- Primary Key Member Foreign Key Member NPRODUCT CódigoDelProducto Código del producto. Valores posibles según la tabla PRODMASTER. PRODMASTER content  Number(5)   
-- Primary Key Member NPOLICY NúmeroDeLaPóliza Número que identifica la póliza/cotización/solicitud.  Number(10)   
-- Foreign Key Member SCLIENT CódigoDeCliente Código que identifica al cliente titular de los recibos de la póliza o certificado. Valores posibles según la tabla CLIENT.  Char(14) Nullable 
-- Foreign Key Member SSTATUS_POL Estado de la póliza Estado de la póliza Valores posibles según la tabla TABLE181. TABLE181 content  Char(1) Nullable 
-- DNULLDATE FechaDeAnulación Fecha de anulación del registro.  Date Nullable 

-- TABLE181:
-- Primary Key Member   SSTATUSVA EstadoDelRegistroDePólizaCertificadoOFactura Código del estado de registro de la póliza/certificado/factura.  Char(1)   
-- DCOMPDATE FechaDeActualizaciónDelRegistro Fecha del computador en que se crea o actualiza el registro.  Date Nullable 
-- SDESCRIPT Descripción Descripción del estado de la póliza.  Char(30) Nullable 
-- SSHORT_DES DescripciónCorta Descripción abreviada del estado de la póliza.  Char(12) Nullable 
-- SSTATREGT EstadoDelRegistro Estado del registro. Valores posibles según la tabla TABLE26. TABLE26 content  Char(1) Nullable 
-- NUSERCODE CódigoDeUsuario Código del usuario que crea o actualiza el registro.  Number(5) Nullable 


-- Primary Key Member Foreign Key Member NCLASSTYPDOC NCLASSTYPDOC Clase de documento o formato. Valores posibles según la tabla TABLE6023. TABLE6023 content  Number   
-- Primary Key Member   NTYPCLIENTDOC NTYPCLIENTDOC    Number   


--  CREAMOS TABLAS CLAIM, CLIENT, CLIDOCUMENTS, ADDRESS, POLICY PARA SIMULAR LA BASE DE DATOS
--  CON LAS MISMAS COLUMNAS QUE EN LA BASE DE DATOS REAL

CREATE TABLE CLIENT
(
	SCLIENT CHAR(14) PRIMARY KEY,
	DDEATHDAT DATE
);
/*
TABLE6023
	Primary Key Member   NCLASSTYPDOC ClaseDeDocumento Clase de documento o formato.  Number(2)   
    SDESCRIPT Descripción Descripción del código.  Char(30)   
    SSHORT_DES DescripciónCorta Descripción abreviada de un código.  Char(12)   
    SSTATREGT EstadoDelRegistro Estado del registro. Valores posibles según la tabla TABLE26. TABLE26 content  Char(1)   
    DCOMPDATE FechaDeActualizaciónDelRegistro Fecha del computador en que se crea o actualiza el registro.  Date   
    NUSERCODE CódigoDeUsuario Código del usuario que crea o actualiza el registro.  Number(5)   

*/

CREATE TABLE TABLE6023
(
	NCLASSTYPDOC NUMBER(2) PRIMARY KEY,
	SDESCRIPT CHAR(30),
	SSHORT_DES CHAR(12),
	SSTATREGT CHAR(1),
	DCOMPDATE DATE,
	NUSERCODE NUMBER(5)
);

CREATE TABLE CLIDOCUMENTS
(
	SCLIENT CHAR(14),
	NTYPCLIENTDOC NUMBER(5) REFERENCES TABLE6023(NCLASSTYPDOC),
	SCLINUMDOCU CHAR(15),
	PRIMARY KEY (SCLIENT, NTYPCLIENTDOC, SCLINUMDOCU)
);

CREATE TABLE ADDRESS
(
	NRECOWNER NUMBER(5),
	SKEYADDRESS CHAR(50),
	DEFFECDATE DATE,
	SCLIENT CHAR(14) REFERENCES CLIENT(SCLIENT),
	SE_MAIL CHAR(60),
	DNULLDATE DATE,
	PRIMARY KEY (NRECOWNER, SKEYADDRESS, DEFFECDATE)
);

CREATE TABLE TABLE181
(
	SSTATUSVA CHAR(1) PRIMARY KEY,
	DCOMPDATE DATE,
	SDESCRIPT CHAR(30),
	SSHORT_DES CHAR(12),
	SSTATREGT CHAR(1),
	NUSERCODE NUMBER(5)
);
-- INSUDB.POLICY:
-- Primary Key Member Foreign Key Member SCERTYPE TipoDeRegistro Tipo de registro. Valores posibles según la tabla TABLE5632. TABLE5632 content  Char(1)   
-- Primary Key Member Foreign Key Member NBRANCH RamoComercial Código del ramo comercial. Valores posibles según la tabla TABLE10. TABLE10 content  Number(5)   
-- Primary Key Member Foreign Key Member NPRODUCT CódigoDelProducto Código del producto. Valores posibles según la tabla PRODMASTER. PRODMASTER content  Number(5)   
-- Primary Key Member NPOLICY NúmeroDeLaPóliza Número que identifica la póliza/cotización/solicitud.  Number(10)   
-- Foreign Key Member SCLIENT CódigoDeCliente Código que identifica al cliente titular de los recibos de la póliza o certificado. Valores posibles según la tabla CLIENT.  Char(14) Nullable 
-- Foreign Key Member SSTATUS_POL Estado de la póliza Estado de la póliza Valores posibles según la tabla TABLE181. TABLE181 content  Char(1) Nullable 
-- DNULLDATE FechaDeAnulación Fecha de anulación del registro.  Date Nullable 
CREATE TABLE POLICY
(
	SCERTYPE CHAR(1),
	NBRANCH NUMBER(5),
	NPRODUCT NUMBER(5),
	NPOLICY NUMBER(10),
	SCLIENT CHAR(14) REFERENCES CLIENT(SCLIENT),
	SSTATUS_POL CHAR(1) REFERENCES TABLE181(SSTATUSVA),
	DNULLDATE DATE,
	PRIMARY KEY (SCERTYPE, NBRANCH, NPRODUCT, NPOLICY)
);



-- POBLAMOS LAS TABLAS CON 20 DATOS DE PRUEBA CADA UNA EXCEPTO TABLE181 QUE POBLAMOS CON :
-- Código:1 Descripción:Válido
-- Código:2 Descripción:Inválido
-- Código:3 Descripción:En captura incompleta
-- Código:4 Descripción:Vigente pendiente de impresión
-- Código:5 Descripción:Vigente 
-- Código:6 Descripción:Terminada
-- Código:7 Descripción:Saldada/prorrogada
-- Código:8 Descripción:Rescatada

INSERT INTO CLIENT VALUES('12345678901234', NULL);
INSERT INTO CLIENT VALUES('12345678901235', NULL);
INSERT INTO CLIENT VALUES('12345678901236', NULL);
INSERT INTO CLIENT VALUES('12345678901237', NULL);
INSERT INTO CLIENT VALUES('12345678901238', TO_DATE('20/02/2001', 'DD/MM/YYYY'));
INSERT INTO CLIENT VALUES('12345678901239', NULL);
INSERT INTO CLIENT VALUES('12345678901240', NULL);
INSERT INTO CLIENT VALUES('12345678901241', TO_DATE('20/02/2002', 'DD/MM/YYYY'));
INSERT INTO CLIENT VALUES('12345678901242', NULL);
INSERT INTO CLIENT VALUES('12345678901243', NULL);
INSERT INTO CLIENT VALUES('12345678901244', NULL);
INSERT INTO CLIENT VALUES('12345678901245', NULL);
INSERT INTO CLIENT VALUES('12345678901246', NULL);
INSERT INTO CLIENT VALUES('12345678901247', NULL);
INSERT INTO CLIENT VALUES('12345678901248', NULL);
INSERT INTO CLIENT VALUES('12345678901249', NULL);
INSERT INTO CLIENT VALUES('12345678901250', NULL);
INSERT INTO CLIENT VALUES('12345678901251', NULL);
INSERT INTO CLIENT VALUES('12345678901252', NULL);
INSERT INTO CLIENT VALUES('12345678901253', NULL);


INSERT INTO ADDRESS VALUES (1, '12345678901234', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901234', 'EMAIL@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (2, '12345678901235', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901235', 'RANDOM@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (3, '12345678901236', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901236', 'OTROEMAIL@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (4, '12345678901237', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901237', 'UNMAIL@EMAIL.COM', TO_DATE('10/04/2021', 'DD/MM/YYYY'));
INSERT INTO ADDRESS VALUES (5, '12345678901238', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901238', NULL, NULL);
INSERT INTO ADDRESS VALUES (6, '12345678901239', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901239', NULL, NULL);
INSERT INTO ADDRESS VALUES (7, '12345678901240', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901240', NULL, TO_DATE('20/02/2021', 'DD/MM/YYYY'));
INSERT INTO ADDRESS VALUES (8, '12345678901241', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901241', NULL, NULL);
INSERT INTO ADDRESS VALUES (9, '12345678901242', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901242', 'TESTMAIL@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (10, '12345678901243', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901243', 'MAILMASTER@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (11, '12345678901244', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901244', NULL, TO_DATE('22/01/2021', 'DD/MM/YYYY'));
INSERT INTO ADDRESS VALUES (12, '12345678901245', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901245', 'TEST@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (13, '12345678901246', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901246', NULL, NULL);
INSERT INTO ADDRESS VALUES (14, '12345678901247', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901247', 'PRUEBAS@EMAIL.COM', NULL);
INSERT INTO ADDRESS VALUES (15, '12345678901248', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901248', NULL, TO_DATE('08/03/2021', 'DD/MM/YYYY'));
INSERT INTO ADDRESS VALUES (16, '12345678901249', TO_DATE('01/01/2000', 'DD/MM/YYYY'), '12345678901249', NULL, NULL);



/*
TABLE181
SSTATUSVA DCOMPDATE SDESCRIPT SSHORT_DES SSTATREGT NUSERCODE 
1 3/5/2002 4:16:02 PM Válido  Válido  1 1 
2 3/5/2002 4:16:21 PM Inválido  Inválido  1 1 
3 3/5/2002 4:21:52 PM En captura incompleta  En cap.incom 1 1 
4 8/1/2002 1:23:20 PM Vigente pendiente de impresión Vig. pdte. e 1 1 
5 8/1/2002 1:23:46 PM Vigente  Vigente  1 1 
6 8/1/2002 1:24:37 PM Terminada  Terminada  1 1 
7 8/1/2002 1:25:02 PM Saldada/Prorrogada  Sald./Prorr. 1 1 
8 3/5/2002 4:21:12 PM Rescatada  Rescatada  1 1 

*/

INSERT INTO TABLE181 VALUES ('1', TO_DATE('05/03/2002 04:16:02 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Válido', 'Válido', '1', '1');
INSERT INTO TABLE181 VALUES ('2', TO_DATE('05/03/2002 04:16:21 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Inválido', 'Inválido', '1', '1');
INSERT INTO TABLE181 VALUES ('3', TO_DATE('05/03/2002 04:21:52 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'En captura incompleta', 'En cap.incom', '1', '1');
INSERT INTO TABLE181 VALUES ('4', TO_DATE('01/08/2002 01:23:20 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Vigente pendiente de impresión', 'Vig. pdte. e', '1', '1');
INSERT INTO TABLE181 VALUES ('5', TO_DATE('01/08/2002 01:23:46 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Vigente', 'Vigente', '1', '1');
INSERT INTO TABLE181 VALUES ('6', TO_DATE('01/08/2002 01:24:37 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Terminada', 'Terminada', '1', '1');
INSERT INTO TABLE181 VALUES ('7', TO_DATE('01/08/2002 01:25:02 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Saldada/Prorrogada', 'Sald./Prorr.', '1', '1');
INSERT INTO TABLE181 VALUES ('8', TO_DATE('05/03/2002 04:21:12 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Rescatada', 'Rescatada', '1', '1');

/*
ACA INSERTAMOS LOS DATOS DE POLICY
SERA UN TOTAL DE 100 POLIZAS
PONDREMOS 5 POLIZAS POR CLIENTE

EL 75% DE LAS POLIZAS SERAN SSTATUS_POL = VIGENTES SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 2% DE LAS POLIZAS SERAN SSTATUS_POL = INVALIDAS SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 3% DE LAS POLIZAS SERAN SSTATUS_POL = EN CAPTURA INCOMPLETA SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 8% DE LAS POLIZAS SERAN SSTATUS_POL = VIGENTES PENDIENTES DE IMPRESION SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 5% DE LAS POLIZAS SERAN SSTATUS_POL = TERMINADAS SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 3% DE LAS POLIZAS SERAN SSTATUS_POL = SALDADAS/PRORROGADAS SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 2% DE LAS POLIZAS SERAN SSTATUS_POL = RESCATADAS SEGUN SSTATUSVA DE LA TABLA TABLE181
*/


/*
TABLA6023
6 Licencia de conducir (Brevete) Lic conducir 1 9/23/2005 12:32:47 PM 1805 
2 Documento de identificación  Identidad  1 6/5/2007 11:20:01 AM 409 
5 Cuentas bancarias  Ctas. banco  1 11/19/2004 12:00:00 AM 5802 
1 Placa normal  Placa  1 6/5/2007 11:19:20 AM 409 
7 Placa especial  Placa Espl  1 6/5/2007 11:19:32 AM 409 
8 Placa provisional  placa provic 1 6/5/2007 11:19:46 AM 409 
*/
INSERT INTO TABLA6023 VALUES (6, 'Licencia de conducir (Brevete)', 'Lic conducir', '1', TO_DATE('23/09/2005 12:32:47 PM', 'DD/MM/YYYY HH:MI:SS PM'), 1805);
INSERT INTO TABLA6023 VALUES (2, 'Documento de identificación', 'Identidad', '1', TO_DATE('05/06/2007 11:20:01 AM', 'DD/MM/YYYY HH:MI:SS PM'), 409);
INSERT INTO TABLA6023 VALUES (5, 'Cuentas bancarias', 'Ctas. banco', '1', TO_DATE('19/11/2004 12:00:00 AM', 'DD/MM/YYYY HH:MI:SS PM'), 5802);
INSERT INTO TABLA6023 VALUES (1, 'Placa normal', 'Placa', '1', TO_DATE('05/06/2007 11:19:20 AM', 'DD/MM/YYYY HH:MI:SS PM'), 409);
INSERT INTO TABLA6023 VALUES (7, 'Placa especial', 'Placa Espl', '1', TO_DATE('05/06/2007 11:19:32 AM', 'DD/MM/YYYY HH:MI:SS PM'), 409);
INSERT INTO TABLA6023 VALUES (8, 'Placa provisional', 'placa provic', '1', TO_DATE('05/06/2007 11:19:46 AM', 'DD/MM/YYYY HH:MI:SS PM'), 409);


INSERT INTO CLIDOCUMENTS VALUES ('12345678901234', 6, '12345678901234');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901235', 2, '12345678901235');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901236', 2, '12345678901236');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901237', 1, '12345678901237');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901238', 5, '12345678901238');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901239', 2, '12345678901239');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901240', 6, '12345678901240');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901241', 2, '12345678901241');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901242', 2, '12345678901242');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901243', 1, '12345678901243');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901244', 7, '12345678901244');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901245', 2, '12345678901245');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901246', 6, '12345678901246');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901247', 2, '12345678901247');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901248', 2, '12345678901248');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901249', 2, '12345678901249');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901250', 2, '12345678901250');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901251', 8, '12345678901251');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901252', 2, '12345678901252');
INSERT INTO CLIDOCUMENTS VALUES ('12345678901253', 2, '12345678901253');









CREATE TABLE CLIENT
(
	SCLIENT CHAR(14) PRIMARY KEY,
	DDEATHDAT DATE
);

INSERT INTO CLIENT VALUES('12345678901234', NULL);
INSERT INTO CLIENT VALUES('12345678901235', NULL);
INSERT INTO CLIENT VALUES('12345678901236', NULL);
INSERT INTO CLIENT VALUES('12345678901237', NULL);
INSERT INTO CLIENT VALUES('12345678901238', TO_DATE('20/02/2001', 'DD/MM/YYYY'));
INSERT INTO CLIENT VALUES('12345678901239', NULL);
INSERT INTO CLIENT VALUES('12345678901240', NULL);
INSERT INTO CLIENT VALUES('12345678901241', TO_DATE('20/02/2002', 'DD/MM/YYYY'));
INSERT INTO CLIENT VALUES('12345678901242', NULL);
INSERT INTO CLIENT VALUES('12345678901243', NULL);
INSERT INTO CLIENT VALUES('12345678901244', NULL);
INSERT INTO CLIENT VALUES('12345678901245', NULL);
INSERT INTO CLIENT VALUES('12345678901246', NULL);
INSERT INTO CLIENT VALUES('12345678901247', NULL);
INSERT INTO CLIENT VALUES('12345678901248', NULL);
INSERT INTO CLIENT VALUES('12345678901249', NULL);
INSERT INTO CLIENT VALUES('12345678901250', NULL);
INSERT INTO CLIENT VALUES('12345678901251', NULL);
INSERT INTO CLIENT VALUES('12345678901252', NULL);
INSERT INTO CLIENT VALUES('12345678901253', NULL);

CREATE TABLE TABLE181
(
	SSTATUSVA CHAR(1) PRIMARY KEY,
	DCOMPDATE DATE,
	SDESCRIPT CHAR(30),
	SSHORT_DES CHAR(12),
	SSTATREGT CHAR(1),
	NUSERCODE NUMBER(5)
);

CREATE TABLE POLICY
(
	SCERTYPE CHAR(1),
	NBRANCH NUMBER(5),
	NPRODUCT NUMBER(5),
	NPOLICY NUMBER(10),
	SCLIENT CHAR(14) REFERENCES CLIENT(SCLIENT),
	SSTATUS_POL CHAR(1) REFERENCES TABLE181(SSTATUSVA),
	DNULLDATE DATE

);

/*
TABLE181
SSTATUSVA DCOMPDATE SDESCRIPT SSHORT_DES SSTATREGT NUSERCODE 
1 3/5/2002 4:16:02 PM Válido  Válido  1 1 
2 3/5/2002 4:16:21 PM Inválido  Inválido  1 1 
3 3/5/2002 4:21:52 PM En captura incompleta  En cap.incom 1 1 
4 8/1/2002 1:23:20 PM Vigente pendiente de impresión Vig. pdte. e 1 1 
5 8/1/2002 1:23:46 PM Vigente  Vigente  1 1 
6 8/1/2002 1:24:37 PM Terminada  Terminada  1 1 
7 8/1/2002 1:25:02 PM Saldada/Prorrogada  Sald./Prorr. 1 1 
8 3/5/2002 4:21:12 PM Rescatada  Rescatada  1 1 

*/

INSERT INTO TABLE181 VALUES ('1', TO_DATE('05/03/2002 04:16:02 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Válido', 'Válido', '1', '1');
INSERT INTO TABLE181 VALUES ('2', TO_DATE('05/03/2002 04:16:21 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Inválido', 'Inválido', '1', '1');
INSERT INTO TABLE181 VALUES ('3', TO_DATE('05/03/2002 04:21:52 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'En captura incompleta', 'En cap.incom', '1', '1');
INSERT INTO TABLE181 VALUES ('4', TO_DATE('01/08/2002 01:23:20 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Vigente pendiente de impresión', 'Vig. pdte. e', '1', '1');
INSERT INTO TABLE181 VALUES ('5', TO_DATE('01/08/2002 01:23:46 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Vigente', 'Vigente', '1', '1');
INSERT INTO TABLE181 VALUES ('6', TO_DATE('01/08/2002 01:24:37 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Terminada', 'Terminada', '1', '1');
INSERT INTO TABLE181 VALUES ('7', TO_DATE('01/08/2002 01:25:02 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Saldada/Prorrogada', 'Sald./Prorr.', '1', '1');
INSERT INTO TABLE181 VALUES ('8', TO_DATE('05/03/2002 04:21:12 PM', 'DD/MM/YYYY HH:MI:SS PM'), 'Rescatada', 'Rescatada', '1', '1');

/*
ACA INSERTAMOS LOS DATOS DE POLICY
SERA UN TOTAL DE 100 POLIZAS
PONDREMOS ENTRE 3 Y 7 POLIZAS POR CLIENTE

EL 75% DE LAS POLIZAS SERAN SSTATUS_POL = VIGENTES SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 2% DE LAS POLIZAS SERAN SSTATUS_POL = INVALIDAS SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 3% DE LAS POLIZAS SERAN SSTATUS_POL = EN CAPTURA INCOMPLETA SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 8% DE LAS POLIZAS SERAN SSTATUS_POL = VIGENTES PENDIENTES DE IMPRESION SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 5% DE LAS POLIZAS SERAN SSTATUS_POL = TERMINADAS SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 3% DE LAS POLIZAS SERAN SSTATUS_POL = SALDADAS/PRORROGADAS SEGUN SSTATUSVA DE LA TABLA TABLE181
EL 2% DE LAS POLIZAS SERAN SSTATUS_POL = RESCATADAS SEGUN SSTATUSVA DE LA TABLA TABLE181
*/

CREATE OR REPLACE PROCEDURE POPULATE_POLICY AS
  L_RANDOM_NUMBER NUMBER;
  L_STATUS VARCHAR2(1);

  FUNCTION RANDOM_NUMBER RETURN NUMBER IS
  BEGIN
	RETURN MOD(DBMS_RANDOM.RANDOM, 100) + 1;
  END RANDOM_NUMBER;

  BEGIN
  FOR I IN 100 LOOP
	L_RANDOM_NUMBER := RANDOM_NUMBER;
	
	CASE
	  WHEN (L_RANDOM_NUMBER <= 75) THEN
		L_STATUS := '5'; -- Vigente
	  WHEN (L_RANDOM_NUMBER <= 77) THEN
		L_STATUS := '2'; -- InvÃ¡lida
	  WHEN (L_RANDOM_NUMBER <= 80) THEN
		L_STATUS := '3'; -- En captura incompleta
	  WHEN (L_RANDOM_NUMBER <= 88) THEN
		L_STATUS := '4'; -- Vigente pendiente de impresiÃ³n
	  WHEN (L_RANDOM_NUMBER <= 93) THEN
		L_STATUS := '6'; -- Terminada
	  WHEN (L_RANDOM_NUMBER <= 96) THEN
		L_STATUS := '7'; -- Saldada/Prorrogada
	  ELSE
		L_STATUS := '8'; -- Rescatada
	END CASE;


	INSERT INTO POLICY (
	  SCERTYPE,
	  NBRANCH,
	  NPRODUCT,
	  NPOLICY,
	  SCLIENT,
	  SSTATUS_POL,
	  DNULLDATE
	) VALUES (
	  'C', -- Tipo de pÃ³liza
	  MOD(I, 10) + 1, -- NÃºmero de sucursal
	  MOD(I, 20) + 1, -- NÃºmero de producto
	  I, -- NÃºmero de pÃ³liza
	  -- CÃ³digo de cliente CADA 5 POLIZAS SE INCREMENTA EL CLIENTE
	  TO_CHAR(12345678901234 + TRUNC(I / 5)),

	  L_STATUS, -- Estado de la pÃ³liza
	  NULL -- Fecha de anulaciÃ³n
	);
  END LOOP;
END POPULATE_POLICY;





-- EJECUTAMOS LA FUNCION PARA POBLAR LA TABLA POLICY
BEGIN
  POPULATE_POLICY;
END;




-- STORED PROCEDURE PARA OBTENER:
/*
SEGUN EL DNI, QUE DEBE SER TIPO "DOCUMENTO DE IDENTIDAD (2)" QUIERO OBTENER EL EMAIL NO ANULADOS, POLIZAS VIGENTES, CLIENTE VIVO
*/







--SELECT 
	--CL.SCLIENT,
	--AD.SE_MAIL,
	--P.NPOLICY
--FROM
	--CLIENT CL
	--INNER JOIN CLIDOCUMENTS CD ON CL.SCLIENT = CD.SCLIENT
	--INNER JOIN ADDRESS AD ON CL.SCLIENT = AD.SCLIENT
	--INNER JOIN POLICY P ON CL.SCLIENT = P.SCLIENT
--WHERE
--	CL.SCLIENT = '12345678901235'
	--AND CD.NTYPCLIENTDOC = 2
--	AND AD.DNULLDATE IS NULL
	--AND P.SSTATUS_POL = 5
--	AND CL.DDEATHDAT IS NULL;

